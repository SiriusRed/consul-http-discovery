global
    log /dev/log len 4096 local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    maxconn 20000        # count about 1 GB per 20000 connections
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    tune.ssl.default-dh-param 4096

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL).
    ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK
    ssl-default-bind-options no-sslv3

defaults
    mode	http
    log	global
    option	httplog
    option	dontlognull
    option  forwardfor
    timeout connect 5000
    timeout client  300000
    timeout server  300000
    timeout http-keep-alive 30000
    timeout tunnel  15m

    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http
    log-format {\"request_header_host\":\"%[capture.req.hdr(0)]\",\"x_clientid\":\"%[capture.req.hdr(1)]\",\"header_xfwd\":\"%[capture.req.hdr(2)]\",\"client_ip\":\"%ci\",\"client_port\":\"%cp\",\"syslog_timestamp\":\"%t\",\"frontend_name_transport\":\"%ft\",\"backend_name\":\"%b\",\"server_name\":\"%s\",\"tq\":\"%Tq\",\"tw\":\"%Tw\",\"tc\":\"%Tc\",\"tr\":\"%Tr\",\"tt\":\"%Tt\",\"http_status_code\":\"%ST\",\"bytes_read\":\"%B\",\"captured_request_cookie\":\"%CC\",\"captured_response_cookie\":\"%CS\",\"termination_state\":\"%tsc\",\"actconn\":\"%ac\",\"feconn\":\"%fc\",\"beconn\":\"%bc\",\"srvconn\":\"%sc\",\"retries\":\"%rc\",\"srv_queue\":\"%sq\",\"backend_queue\":\"%bq\",\"captured_request_headers\":\"%hr\",\"captured_response_headers\":\"%hs\",\"http_request\":\"%r\"}

listen stats
    bind *:8000
    stats enable
    stats uri	/path_to_stats?stats
    stats realm	HAProxy Statistics
    stats show-desc
    stats auth	login:pass
    stats refresh	30s
    option dontlog-normal
    option dontlognull

frontend http
    mode http
    bind *:80
    bind *:443 ssl crt /etc/path_t_cerificates no-sslv3 ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH+aRSA+RC4:EECDH:EDH+aRSA:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4

    http-request add-header X-Forwarded-SSL on if { ssl_fc }
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }

    rspadd Strict-Transport-Security:\ max-age=31536000 if { ssl_fc }

    capture request header Host len 32
    capture request header x-clientid len 120
    capture request header X-Forwarded-For len 120

### Consul ACL

    {{ range services }}{{ $serviceName := .Name }}{{ range $tag, $a := service .Name | byTag }}
    acl {{ $tag | toLower }}-{{ $serviceName }} hdr_reg(Host) -i ^{{ $tag | toLower }}-{{ $serviceName }}\.(hp)\.consul${{ end }}{{ end }}

    {{ range services }}{{ $serviceName := .Name }}{{ range $tag, $a := service .Name | byTag }}{{$low_tag := $tag | toLower }}
    acl uat-{{ $serviceName }} hdr_reg(Host) -i ^{{ $serviceName }}\.(hp)\.consul${{ end }}{{ end }}

    http-response add-header X-SVC-INST %b/%s

### Case section

    # For special service
    {{ range service "SERVICE_NAME" }}{{ if eq .Name "SERVICE_NAME" }} use_backend SERVICE_TAG-SERVICE_NAME if ACL1 ACL2 {{end}}{{end}}

    # Access to services in consul
    {{ range services }}{{ $serviceName := .Name }}{{ range $tag, $a := service .Name | byTag }}
    use_backend {{ $tag | toLower }}-{{ $serviceName }} if {{ $tag | toLower }}-{{ $serviceName }}{{ end }}{{ end }}


    # With url and X-SVCID
    use_backend %[req.hdr(X-SVCID),lower] if xsvcid_header

### Backends

{{ range services }}{{ $serviceName := .Name}}{{ range $tag, $a := service .Name | byTag }}backend {{ $tag | toLower }}-{{ $serviceName }}
        {{ range $a }}server {{ $serviceName }}-{{ .Port }} {{ .NodeAddress }}:{{ .Port }}
        {{end}}
{{end}}{{end}}

{{ range services }}{{ $serviceName := .Name}}{{ range $tag, $a := service .Name | byTag }}{{ range $a }}backend {{ $tag | toLower }}.{{ .ID | toLower }}-{{ .Node }}
        server {{ .ID }} {{ .NodeAddress }}:{{ .Port }}
{{end}}{{end}}{{end}}